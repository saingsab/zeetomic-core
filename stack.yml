version: "3.1"
networks:
  web:
    external: true
  internal:
    external: false
services:
  db-testnet:
    image: postgres
    restart: always
    volumes:
      - ./dbs:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - internal
      - web
  adminer:
    image: adminer
    restart: always
    ports:
      - 8088:8080
    networks:
      - web
    depends_on:
      - db-testnet

  node-testnet:
    image: keymetrics/pm2:latest-alpine
    container_name: "stellar-node-testnet"
    restart: always
    ports:
      - 5001:5001
    volumes:
      - ./stellar-poc:/home/node/app
    networks:
      - internal
    working_dir: /home/node/app
    command: >
      sh -c "npm install && pm2-runtime start ecosystem.config.js"

  # indracore-rpc-client:
  #   image: keymetrics/pm2:latest-alpine
  #   container_name: "indracore-rpc-client"
  #   restart: always
  #   ports:
  #     - 9002:9002
  #   volumes:
  #     - ./indracore-rpc-client:/home/node/app
  #   networks:
  #     - internal
  #   working_dir: /home/node/app
  #   command: >
  #     sh -c "npm install && pm2-runtime start ecosystem.config.js"

  s3-server:
    image: node:12-alpine
    container_name: "zeetomic-s3-testnet"
    restart: always
    ports:
      - 9001:9001
    volumes:
      - ./s3-server:/home/node/app
    networks:
      - web
    working_dir: /home/node/app
    command: >
      sh -c "npm i -S pm2 && npm install && pm2-runtime server.js --watch"

  apiserver:
    image: clojure
    container_name: "zeetomic-api-testnet"
    restart: always
    depends_on:
      - indracore-rpc-client
    ports:
      - 3001:3000
    volumes:
      - ./:/usr/src/myapp
    networks:
      - web
      - internal
    working_dir: /usr/src/myapp
    command: sh -c "lein do clean, ring uberjar && java -jar target/server.jar"
